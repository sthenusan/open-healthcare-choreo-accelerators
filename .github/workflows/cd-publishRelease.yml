name: Publish Release

on:
    workflow_dispatch:
      inputs:
        target-branch:
          description: 'Branch to target'
          required: true

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
     - name: Checkout code
       uses: actions/checkout@v3
       with:
        ref: ${{ github.event.inputs.target-branch }}

     - name: Run ballerina build
       uses: ballerina-platform/ballerina-action@2201.7.0
       with:
        args:
          build
       env:
          WORKING_DIR: ${{ github.workspace }}
          JAVA_HOME: /usr/lib/jvm/default-jvm   

     - name: Find JAR file
       id: find-jars
       run: |
          jar_files=$(find "${{ github.workspace }}" -name "*.jar" -path "*/target/bin/*")
          echo "JAR_FILES=$jar_files" >> $GITHUB_ENV

     - name: JAR file Info
       run: |
          echo "Jar path: $JAR_FILES"
          jar tf $JAR_FILES

     - name: Get tag from Ballerina.toml and create tag name
       run: |
          VERSION_NO=$(grep -oP '(?<=version = \")[^\"]*' Ballerina.toml)
          echo "VERSION_NO='$VERSION_NO'" >> $GITHUB_ENV

          prefix=$(echo ${{ github.event.inputs.target-branch }} | cut -d '-' -f 1-2)
          echo VERSION="${prefix}-v$(echo $VERSION_NO)" >> $GITHUB_ENV 

     - name: Create Release
       id: create_release
       run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d '{
              "tag_name": "'"$VERSION"'",
              "target_commitish": "${{ github.event.inputs.target-branch }}",
              "name": "'"$VERSION"'",
              "body": "Releases",
              "draft": false,
              "prerelease": false,
              "generate_release_notes": false
            }'

     - name: Extract release ID
       run: |
          response=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/tags/$VERSION)
          echo "$response"
          release_id=$(echo "$response" | jq -r '.id')
          echo "RELEASE_ID=$release_id" >> $GITHUB_ENV

     - name: Upload JAR to GitHub Release
       run: | 
          echo "Release id: $RELEASE_ID"             
          curl -X POST \
            -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
            -H "Content-Type: application/java-archive" \
            --data-binary @"$JAR_FILES" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=$(basename $JAR_FILES)"
